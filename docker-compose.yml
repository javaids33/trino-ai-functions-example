version: '3.8'

services:
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - trino-net

  nessie:
    image: projectnessie/nessie:0.76.1
    ports:
      - "19120:19120"
    environment:
      - QUARKUS_HTTP_PORT=19120
    networks:
      - trino-net

  trino:
    image: trinodb/trino:471
    container_name: trino
    ports:
      - "8080:8080"
    volumes:
      - ./trino/etc:/etc/trino
      - ./trino/data:/var/trino
      - ./scripts:/scripts
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
    depends_on:
      - minio
      - nessie
    networks:
      - trino-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/info/state"]
      interval: 10s
      timeout: 5s
      retries: 5

  trino-ai:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - TRINO_HOST=trino
      - TRINO_PORT=8080
      - TRINO_USER=admin
      - TRINO_PASSWORD=admin
      - TRINO_CATALOG=nessie
      - TRINO_SCHEMA=iceberg
      - OLLAMA_MODEL=llama3.3
      - OLLAMA_HOST=http://localhost:11434
    volumes:
      - ./data:/app/data
      - ./.chromadb:/app/.chromadb
    depends_on:
      trino:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - trino-net

networks:
  trino-net:
    driver: bridge

volumes:
  minio_data: 